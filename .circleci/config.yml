version: 2.1

executors:
  baal:
    resource_class: medium
    docker:
      - image: circleci/python:3.8
jobs:
  install_and_test_backend:
    executor: baal
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-{{ checksum "poetry.lock" }}
            - v2
      - run:
          name: install dependencies
          command: |
            pip config set global.progress_bar off
            pip install --upgrade pip
            pip install cmake "poetry==1.1.7"
            poetry config virtualenvs.create true
            poetry config virtualenvs.in-project true
            poetry install --no-interaction --no-ansi --remove-untracked -E nlp -E vision
      - save_cache:
          key: v2-{{ checksum "poetry.lock" }}
          paths:
            - .venv
      - run:
          name: Setup Environment Variables
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_URL=${CIRCLE_BUILD_URL}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_NAME=circle" >> $BASH_ENV
      - run:
          name: run tests
          command: |
            make test bandit
  test-import:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.7-stretch
    steps:
      - checkout

      - run:
          name: install dependencies no-dev
          command: |
            pip config set global.progress_bar off
            pip install --upgrade pip
            pip install cmake "poetry==1.1.7"
            poetry config virtualenvs.create true
            poetry config virtualenvs.in-project true
            poetry install --no-interaction --no-ansi --remove-untracked --no-dev
      - run:
          name: "test import"
          command: |
            poetry run python -c "import baal; import baal.active.dataset; \
            import baal.active.heuristics; import baal.active.active_loop; \
            import baal.bayesian; import baal.calibration; import baal.modelwrapper"

  fossa:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.7-stretch

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/baal

    steps:
      - run:
          name: Grab FOSSA client
          command: |
            curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      - checkout

      - run:
          name: Setup Environment Variables
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_URL=${CIRCLE_BUILD_URL}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_NAME=circle" >> $BASH_ENV

      - run:
          name: FOSSA scan
          command: fossa
          working_directory: ~/baal

workflows:
  version: 2
  run_test:
    jobs:
      - install_and_test_backend
      - fossa:
          filters:
            branches:
              only:
                - master
      - test-import
